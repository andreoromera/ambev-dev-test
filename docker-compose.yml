services:
  ambev_dev_test_database:
    container_name: ambev_dev_test_database
    image: postgres:13
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer -d ambev_dev_test"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

    environment:
      POSTGRES_DB: ambev_dev_test
      POSTGRES_USER: developer
      POSTGRES_PASSWORD: d3v3l0p3r!
    ports:
      - "5432:5432"
    restart: unless-stopped

  ambev_dev_test_api:
    container_name: ambev_dev_test_api
    image: ambev_dev_test_api
    build:
      context: ./backend
      dockerfile: Ambev.Dev.Test.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTPS_PORTS=8081
      - ConnectionStrings__DefaultConnection=Server=ambev_dev_test_database;Database=ambev_dev_test;User Id=developer;Password=d3v3l0p3r!;TrustServerCertificate=True
    ports:
      - "7199:8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    depends_on:
      ambev_dev_test_database:
        condition: service_healthy
        restart: true

  ambev_dev_test:
    image: ambev_dev_test_frontend
    build:
      context: ./frontend/ambev-dev-test
      dockerfile: Dockerfile
    environment:
      NODE_ENV: debug
    ports:
      - 3000:3000
    depends_on:
      - ambev_dev_test_api
