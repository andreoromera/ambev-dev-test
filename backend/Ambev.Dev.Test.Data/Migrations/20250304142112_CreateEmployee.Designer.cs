// <auto-generated />
using System;
using Ambev.Dev.Test.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Ambev.Dev.Test.Data.Migrations
{
    [DbContext(typeof(DefaultContext))]
    [Migration("20250304142112_CreateEmployee")]
    partial class CreateEmployee
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ambev.Dev.Test.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int?>("SuperiorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("SuperiorId");

                    b.ToTable("Employee", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(1990, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2025, 2, 27, 13, 17, 8, 105, DateTimeKind.Unspecified),
                            Document = "80560664702",
                            Email = "john@ambev.com.br",
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "$2a$11$E4T2lxYYVNJV4GtIeiv8sebizVWxrTocqL1mOBLYca945lLzafYF2",
                            Role = 600
                        });
                });

            modelBuilder.Entity("Ambev.Dev.Test.Domain.Entities.EmployeePhone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployeeId")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("PhoneType")
                        .HasColumnType("integer");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("character varying(7)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeePhones", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EmployeeId = 1,
                            PhoneNumber = "55648899",
                            PhoneType = 1,
                            Prefix = "+5511"
                        },
                        new
                        {
                            Id = 2,
                            EmployeeId = 1,
                            PhoneNumber = "984151887",
                            PhoneType = 2,
                            Prefix = "+5511"
                        });
                });

            modelBuilder.Entity("Ambev.Dev.Test.Domain.Entities.Employee", b =>
                {
                    b.HasOne("Ambev.Dev.Test.Domain.Entities.Employee", "Superior")
                        .WithMany()
                        .HasForeignKey("SuperiorId");

                    b.Navigation("Superior");
                });

            modelBuilder.Entity("Ambev.Dev.Test.Domain.Entities.EmployeePhone", b =>
                {
                    b.HasOne("Ambev.Dev.Test.Domain.Entities.Employee", "Employee")
                        .WithMany("Phones")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Ambev.Dev.Test.Domain.Entities.Employee", b =>
                {
                    b.Navigation("Phones");
                });
#pragma warning restore 612, 618
        }
    }
}
